<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.seeumt.dao.LoveFromUserMapper">
  <resultMap id="BaseResultMap" type="cn.seeumt.dataobject.LoveFromUser">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="content_id" jdbcType="VARCHAR" property="contentId" />
    <result column="from_user_id" jdbcType="VARCHAR" property="fromUserId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="from_id" jdbcType="VARCHAR" property="fromId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, type, status, content_id, from_user_id, create_time, update_time, from_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from love_from_user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from love_from_user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="cn.seeumt.dataobject.LoveFromUser">
    insert into love_from_user (id, type, status,
      content_id, from_user_id, create_time,
      update_time, from_id)
    values (#{id,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, #{status,jdbcType=BIT},
      #{contentId,jdbcType=VARCHAR}, #{fromUserId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP}, #{fromId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.seeumt.dataobject.LoveFromUser">
    insert into love_from_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="contentId != null">
        content_id,
      </if>
      <if test="fromUserId != null">
        from_user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="fromId != null">
        from_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="contentId != null">
        #{contentId,jdbcType=VARCHAR},
      </if>
      <if test="fromUserId != null">
        #{fromUserId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fromId != null">
        #{fromId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.seeumt.dataobject.LoveFromUser">
    update love_from_user
    <set>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="contentId != null">
        content_id = #{contentId,jdbcType=VARCHAR},
      </if>
      <if test="fromUserId != null">
        from_user_id = #{fromUserId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fromId != null">
        from_id = #{fromId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.seeumt.dataobject.LoveFromUser">
    update love_from_user
    set type = #{type,jdbcType=TINYINT},
      status = #{status,jdbcType=BIT},
      content_id = #{contentId,jdbcType=VARCHAR},
      from_user_id = #{fromUserId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      from_id = #{fromId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="selectListByFromId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from love_from_user
    where
    from_id=#{fromId}
  </select>
</mapper>
