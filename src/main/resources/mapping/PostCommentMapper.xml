<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.seeumt.dao.PostCommentMapper">
  <resultMap id="BaseResultMap" type="cn.seeumt.dataobject.PostComment">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="enabled" jdbcType="BIT" property="enabled" />
    <result column="reply_id" jdbcType="VARCHAR" property="replyId" />
    <result column="post_id" jdbcType="VARCHAR" property="postId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, type, create_time, update_time, enabled, reply_id, post_id, user_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from post_comment
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from post_comment
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="cn.seeumt.dataobject.PostComment">
    insert into post_comment (id, type, create_time,
      update_time, enabled, reply_id,
      post_id, user_id)
    values (#{id,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP}, #{enabled,jdbcType=BIT}, #{replyId,jdbcType=VARCHAR},
      #{postId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.seeumt.dataobject.PostComment">
    insert into post_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="replyId != null">
        reply_id,
      </if>
      <if test="postId != null">
        post_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=BIT},
      </if>
      <if test="replyId != null">
        #{replyId,jdbcType=VARCHAR},
      </if>
      <if test="postId != null">
        #{postId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.seeumt.dataobject.PostComment">
    update post_comment
    <set>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=BIT},
      </if>
      <if test="replyId != null">
        reply_id = #{replyId,jdbcType=VARCHAR},
      </if>
      <if test="postId != null">
        post_id = #{postId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.seeumt.dataobject.PostComment">
    update post_comment
    set type = #{type,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      enabled = #{enabled,jdbcType=BIT},
      reply_id = #{replyId,jdbcType=VARCHAR},
      post_id = #{postId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="findAllCommentsOfAPostByPostIdAndReplyId" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM
    post_comment
    WHERE
    post_comment.post_id=#{postId}
    AND
    post_comment.reply_id=#{replyId};
  </select>
  <select id="selectByCommentId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from post_comment
    where id = #{commentId,jdbcType=VARCHAR}
  </select>

  <select id="selectByReplyId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from post_comment
    where reply_id = #{replyId,jdbcType=VARCHAR}
  </select>
</mapper>
